let _sliderDOMRect,step=2,min=-10,max=10,range=[11,37],lastMax=0,value=[6,37],configLimit=[[NaN,3],[NaN,NaN]],limit=[[NaN,NaN],[NaN,NaN]],_thumbToAdjust="";const slider=document.querySelector(".slider"),progress=document.querySelector(".progress"),thumbLeft=document.querySelector(".thumbLeft"),thumbRight=document.querySelector(".thumbRight");function _init(){_adjustMinMaxValues(),_adjustLimitValues(),_adjustValueToLimit(),setLeftValue(value[0]),setRightValue(value[1])}function _onPointerDown(t){_thumbToAdjust=_whichThumbToAdjust(t.clientX),_sliderDOMRect=slider.getBoundingClientRect(),_updateUI(t.clientX),document.addEventListener("pointermove",_onPointerMove),document.addEventListener("pointerup",_onPointerUp)}function _onPointerUp(){_thumbToAdjust="",_sliderDOMRect=null,document.removeEventListener("pointermove",_onPointerMove),document.removeEventListener("pointerup",_onPointerUp)}function _onPointerMove(t){_updateUI(t.clientX)}function _updateUI(t){const e=mapPercentageToMinMaxRange(_getPercentage(t));switch(_thumbToAdjust){case"left":setLeftValue(e);break;case"right":setRightValue(e)}}function _getPercentage(t){return Math.min(100,Math.max(0,(t-_sliderDOMRect.left)/_sliderDOMRect.width*100))}function mapPercentageToMinMaxRange(t){return min+t/100*(max-min)}function mapValueToPercentageValue(t){const e=(t-min)/(max-min||1);return Math.round(e*(100/step))*step}function _updateLeftThumb(t){thumbLeft.style.left=t+"%",progress.style.left=t+"%"}function _updateRightThumb(t){thumbRight.style.left=t+"%",progress.style.right=100-t+0+"%"}function _setValue(t,e){value[0]=t,value[1]=e}function setLeftValue(t){const e=_getValueInRange(t);e<=value[1]&&limit[0][0]<=e&&limit[0][1]>=e&&(value[0]=e,_updateLeftThumb(mapValueToPercentageValue(e)))}function setRightValue(t){const e=_getValueInRange(t);console.log(e),e>=value[0]&&(isNaN(limit[1][0])||limit[1][0]<=e)&&(isNaN(limit[1][1])||limit[1][1]>=e)&&(value[1]=e,_updateRightThumb(mapValueToPercentageValue(e)))}function _adjustMinMaxValues(){if(min>max){const t=max;max=min,min=t}(lastMax=min+step*Math.round((max-min)/step))>max&&(lastMax-=step)}function _adjustLimitValues(){limit[0][0]=_getValueInRange(Math.max(min,configLimit[0][0]||-1/0)),limit[0][1]=_getValueInRange(Math.min(configLimit[0][1]||1/0,lastMax)),limit[1][0]=_getValueInRange(Math.max(min,configLimit[1][0]||-1/0)),limit[1][1]=_getValueInRange(Math.min(configLimit[1][1]||1/0,lastMax))}function _adjustValueToLimit(){value[0]<limit[0][0]&&(value[0]=limit[0][0]),value[0]>limit[0][1]&&(value[0]=limit[0][1]),value[1]<limit[1][0]&&(value[1]=limit[1][0]),value[1]>limit[1][1]&&(value[1]=limit[1][1])}function _whichThumbToAdjust(t){const e=thumbLeft.getBoundingClientRect(),i=thumbRight.getBoundingClientRect().left-e.right;return t-e.right>i/2?"right":"left"}function _getValueInRange(t){if(t<=min)return min;if(t>=lastMax)return lastMax;{const e=Math.floor((t-min)/step)*step+min,i=Math.ceil((t-min)/step)*step+min;return t-e<i-t?e:i}}slider.addEventListener("pointerdown",_onPointerDown),_init();